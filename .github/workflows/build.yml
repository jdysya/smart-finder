name: Build and Package

on:
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main, develop ]
  release:
    types: [ published ]

permissions:
  contents: write

env:
  GO_VERSION: '1.24'
  CGO_ENABLED: 0

jobs:
  build-client:
    name: Build Client
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            ext: ""
          - os: windows-latest
            platform: windows
            arch: amd64
            ext: ".exe"
          - os: windows-latest
            platform: windows
            arch: arm64
            ext: ".exe"
          - os: macos-latest
            platform: darwin
            arch: amd64
            ext: ""
          - os: macos-latest
            platform: darwin
            arch: arm64
            ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install Frontend Dependencies
      run: |
        cd client-front
        pnpm install

    - name: Build Frontend
      run: |
        cd client-front
        pnpm build
    
    - name: Copy Frontend to Client
      run: |
        rm -rf client/web
        mkdir -p client/web
        cp -r client-front/out/* client/web/


    - name: Set up build dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates

    - name: Set up build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Set up build dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Build and Package Client
      id: build-package
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: ${{ matrix.arch }}
        RUNNER_OS: ${{ runner.os }}
        PLATFORM: ${{ matrix.platform }}
        ARCH: ${{ matrix.arch }}
        EXT: ${{ matrix.ext }}
      run: |
        ./scripts/ci-build-client.sh

    - name: Upload Client Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build-package.outputs.artifact_name }}
        path: ${{ steps.build-package.outputs.artifact_path }}

  build-gateway:
    name: Build Gateway
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            ext: ""
          - os: windows-latest
            platform: windows
            arch: amd64
            ext: ".exe"
          - os: windows-latest
            platform: windows
            arch: arm64
            ext: ".exe"
          - os: macos-latest
            platform: darwin
            arch: amd64
            ext: ""
          - os: macos-latest
            platform: darwin
            arch: arm64
            ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up build dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates

    - name: Set up build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Set up build dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Build Gateway
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: ${{ env.CGO_ENABLED }}
        GOAMD64: v1
      run: |
        cd gateway
        go build -ldflags="-s -w -extldflags=-static" -tags="osusergo,netgo" -o "smart-finder-gateway-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}" .

    - name: Upload Gateway Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gateway-${{ matrix.platform }}-${{ matrix.arch }}
        path: gateway/smart-finder-gateway-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}

  create-release:
    name: Create Release
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [build-client, build-gateway]
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/client-*/*
          artifacts/gateway-*/*
          gateway/config/config.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}