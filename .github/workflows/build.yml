name: Build and Package

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  GO_VERSION: '1.24'
  CGO_ENABLED: 1

jobs:
  build-client:
    name: Build Client
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            ext: ""
          - os: windows-latest
            platform: windows
            arch: amd64
            ext: ".exe"
          - os: macos-latest
            platform: darwin
            arch: amd64
            ext: ""
          - os: macos-latest
            platform: darwin
            arch: arm64
            ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up build dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates

    - name: Set up build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Set up build dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Build Client
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: ${{ env.CGO_ENABLED }}
        GOAMD64: v1
      run: |
        cd client
        go build -ldflags="-s -w -extldflags=-static" -tags="osusergo,netgo" -o "smart-finder-client-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}" .

    - name: Upload Client Artifact
      uses: actions/upload-artifact@v4
      with:
        name: client-${{ matrix.platform }}-${{ matrix.arch }}
        path: client/smart-finder-client-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}

  build-gateway:
    name: Build Gateway
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            ext: ""
          - os: windows-latest
            platform: windows
            arch: amd64
            ext: ".exe"
          - os: macos-latest
            platform: darwin
            arch: amd64
            ext: ""
          - os: macos-latest
            platform: darwin
            arch: arm64
            ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up build dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates

    - name: Set up build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Set up build dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # No additional dependencies needed for static builds
        echo "Static build - no additional dependencies required"

    - name: Build Gateway
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: ${{ env.CGO_ENABLED }}
        GOAMD64: v1
      run: |
        cd gateway
        go build -ldflags="-s -w -extldflags=-static" -tags="osusergo,netgo" -o "smart-finder-gateway-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}" .

    - name: Upload Gateway Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gateway-${{ matrix.platform }}-${{ matrix.arch }}
        path: gateway/smart-finder-gateway-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}

  create-release:
    name: Create Release
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [build-client, build-gateway]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release package
      run: |
        mkdir -p release
        # Copy client binaries
        cp artifacts/client-*/smart-finder-client-* release/ || true
        # Copy gateway binaries  
        cp artifacts/gateway-*/smart-finder-gateway-* release/ || true
        # Copy configuration files
        cp gateway/config/config.yaml release/ || true
        cp gateway/public/error/not-found.html release/ || true
        # Create README for release
        cat > release/README.md << 'EOF'
        # Smart Finder Release
        
        ## 兼容性说明
        本版本使用静态链接构建，支持以下系统：
        - CentOS 7+ / RHEL 7+
        - Ubuntu 16.04+
        - Debian 9+
        - Windows 7+
        - macOS 10.12+
        
        ## 客户端 (Client)
        - smart-finder-client-linux-amd64: Linux x64 版本 (兼容CentOS 7)
        - smart-finder-client-windows-amd64.exe: Windows x64 版本
        - smart-finder-client-darwin-amd64: macOS Intel 版本
        - smart-finder-client-darwin-arm64: macOS Apple Silicon 版本
        
        ## 服务端 (Gateway)
        - smart-finder-gateway-linux-amd64: Linux x64 版本 (兼容CentOS 7)
        - smart-finder-gateway-windows-amd64.exe: Windows x64 版本
        - smart-finder-gateway-darwin-amd64: macOS Intel 版本
        - smart-finder-gateway-darwin-arm64: macOS Apple Silicon 版本
        
        ## 使用说明
        1. 根据您的操作系统选择对应的可执行文件
        2. 确保配置文件 config.yaml 在同一目录下
        3. 运行服务端: ./smart-finder-gateway-[platform]-[arch]
        4. 运行客户端: ./smart-finder-client-[platform]-[arch]
        
        ## CentOS 7 特别说明
        本版本已针对CentOS 7进行了优化，使用静态链接避免依赖问题。
        如果遇到权限问题，请使用: chmod +x smart-finder-*
        EOF

    - name: Create release zip
      run: |
        cd release
        zip -r ../smart-finder-${{ github.event.release.tag_name }}.zip .

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: smart-finder-${{ github.event.release.tag_name }}.zip 